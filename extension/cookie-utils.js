// extension/cookie-utils.js

export async function extractCookiesAsNetscapeFormat(tabUrl) {
  return new Promise((resolve, reject) => {
    const url = new URL(tabUrl);

    chrome.cookies.getAll({ domain: url.hostname }, (cookies) => {
      if (!cookies || cookies.length === 0) {
        reject(new Error("未获取到 cookies。"));
        return;
      }

      const cookieLines = [
        "# Netscape HTTP Cookie File",
        "# Generated by videoDownloader plugin",
        "# https://curl.se/docs/http-cookies.html",
        ""
      ];

      for (const cookie of cookies) {
        const domain = cookie.domain.startsWith(".") ? cookie.domain : "." + cookie.domain;
        const path = cookie.path || "/";
        const secure = cookie.secure ? "TRUE" : "FALSE";
        const expires = cookie.expirationDate ? Math.floor(cookie.expirationDate) : 2147483647;

        const line = [
          domain,
          "TRUE",  // include subdomains
          path,
          secure,
          expires,
          cookie.name,
          cookie.value
        ].join("\t");

        cookieLines.push(line);
      }

      resolve(cookieLines.join("\n"));
    });
  });
}

export function sendCookiesToNativeHost(cookieText, filename) {
  return new Promise((resolve) => {
    const port = chrome.runtime.connectNative("com.yourdomain.ytdlp_downloader");

    port.postMessage({
      type: "save_cookies",
      content: cookieText,
      filename: filename  // 新增字段
    });

    port.onMessage.addListener((msg) => {
      resolve(msg);
    });
  });
}

